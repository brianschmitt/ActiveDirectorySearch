//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ActiveDirectorySearch {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ActiveDirectorySearch.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Active Directory Search.
        /// </summary>
        internal static string ApplicationTitle {
            get {
                return ResourceManager.GetString("ApplicationTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bad Login.
        /// </summary>
        internal static string BadLogin {
            get {
                return ResourceManager.GetString("BadLogin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your search term is too generic..
        /// </summary>
        internal static string ErrorGeneric {
            get {
                return ResourceManager.GetString("ErrorGeneric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required for domains other than {0}..
        /// </summary>
        internal static string ErrorPassword {
            get {
                return ResourceManager.GetString("ErrorPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must provide a search term..
        /// </summary>
        internal static string ErrorRequired {
            get {
                return ResourceManager.GetString("ErrorRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please unselect an option..
        /// </summary>
        internal static string ErrorTooManyOptions {
            get {
                return ResourceManager.GetString("ErrorTooManyOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Domain that you want to search..
        /// </summary>
        internal static string HelpDomain {
            get {
                return ResourceManager.GetString("HelpDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter all or part of the User&apos;s Name or Group to filter member results.  The filter criteria will match as long as it is contained in the string.  No wildcarding is necessary..
        /// </summary>
        internal static string HelpFilter {
            get {
                return ResourceManager.GetString("HelpFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password for the domain you&apos;ve chosen if it is not {0}..
        /// </summary>
        internal static string HelpPassword {
            get {
                return ResourceManager.GetString("HelpPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User ID or Group Name for which you wish to list group memberships. You can use an * as a wildcard..
        /// </summary>
        internal static string HelpSearch {
            get {
                return ResourceManager.GetString("HelpSearch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check Groups A User Is A Member Of:  Enter the user ID for the user and either press enter or click the Check button.  A list of all of the groups that user is a member of will be displayed.  The groups displayed can be filtered by typing in the Result Filter textbox.  Any text appearing in the group name can be typed.  For instance, the filtered results when &quot;filter&quot; is entered in the result filter textbox would include the group &quot;ENDUSER-GROUP-FILTER&quot; because it contains those characters.  Simply delete a [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HelpText {
            get {
                return ResourceManager.GetString("HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have provided an invalid password for the chosen domain. Please update and try again. Repeated attempts may lock your account..
        /// </summary>
        internal static string InvalidPassword {
            get {
                return ResourceManager.GetString("InvalidPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        internal static string Main_CheckClick_Error {
            get {
                return ResourceManager.GetString("Main_CheckClick_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to csv files (*.csv)|*.csv|All files (*.*)|*.*.
        /// </summary>
        internal static string Main_ExportClick_CSV_files {
            get {
                return ResourceManager.GetString("Main_ExportClick_CSV_files", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 4.
        /// </summary>
        internal static string SettingMinQueryLength {
            get {
                return ResourceManager.GetString("SettingMinQueryLength", resourceCulture);
            }
        }
    }
}
